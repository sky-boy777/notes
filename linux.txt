一切皆文件，包括硬盘.....

/ 根分区
swap分区
/boot 分区

分区：把大硬盘分成小的逻辑分区
格式化：写入文件系统
分区设备文件名：给每个分区定义设备文件名
挂载：给每个分区分配挂载点，必须是空目录

虚拟机桥接模式：能使用本地网络，相当于一台真实的电脑，能跟局域网通信

linux严格区分大小写
文件扩展名只是为了给人看的，*.gz, *.conf，系统本身不靠扩展名
设备必须手动挂载才能使用，如U盘，硬盘

/bin：存放系统命令的目录，单用户下也能执行
/sbin：保存系统环境设置相关命令
/usr/bin ：存放系统命令的目录，单用户下不能执行
/usr/sbin：存放跟文件系统不必要的系统管理命令
/boot : 系统启动目录
/dev : 设备文件保存位置
/etc : 配置文件保存位置
/home:用户家目录
/lib:系统调用函数库保存位置
/lost+found:意外关键，而产生的一些碎片文件
/media: 挂载目录
/mnt: 挂载目录
/misc: 挂载目录
/opt: 第三方安装软件保存位置，现在习惯放在/usr/local
/proc:虚拟文件系统
/sys: 虚拟文件系统
/root 超级用户家目录
/srv 服务数据目录
/tmp 临时目录
/usr 系统资源目录
/var 动态数据保存位置，日志，缓存....

查看文件内容：cat，more，head，tail，less
du -sh 文件    统计大小

定时任务：
*   *    *  *    *
分 时 日 月 星期

命令 [-选项] [参数]
ls
ls -a 显示隐藏文件
ls -l  显示文件详细信息
三种关系：u所有者，g所属组，o其他人
文件类型："-"二进制文件，"d"目录，"l"软连接文件
ls -lh    文件大小用K显示
ls -ld     显示当前目录的信息

mkdir 目录1 目录2
-p    递归创建多级目录
rmdir  删除空目录
cp 源文件1，源文件2  目标地           -r复制目录，-p保留原有属性，复制时可改名
mv 移动，改名
rm -rf 文件或目录，-r删除目录，-f强制删除，不提示
rm "目   录"      删除中间有空格的目录或文件 

touch创建文件，或vi，vim

链接link：
ln 源文件 目标文件，-s软链接
软链接：相当于window快捷方式，全是rwx，能跨分区
硬链接：会同步更新，两个，删除了一个还有一个，不能跨分区
echo ”dfjdk“ >> 文件        输出重定向到文件

权限管理：
u所有者，g所属组，o其他人
chmod
+、-、=三种赋予权限
chmod u+x，g-w，o=r  文件
数字表示
r w x
4 2 1
chmod  -R 640  文件     -R递归修改
chmod a+x  文件           all，全部人都有x权限

chown 存在的用户 文件              改变所有者
chgrp   组  文件                          改变所属组

linux新创建的文件默认不具有可执行权限
umask -S  显示，设置文件的缺省权限

find搜索会占用大量资源
find [搜索范围] [匹配条件]
"*"匹配任意字符
"?"匹配单个字符
-name根据文件名查找，-iname不区分大小写查找
-group
-size +201800         查找大于100M的文件，"-"小于
-user  用户               根据用户查找
-amin                       时间
-cmin  -5                 5分钟内被更改过的文件属性
-mmin  文件内容
条件查找
-a    and：find  / i* -a a*       与                   
-o    or
-type    根据文件类型查找
-inum   根据i节点查找
f   文件
d   目录
l    链接

locate搜索文件，快速搜索
which ls    查找ls命令位置
whereis ls 获得绝对路径

grep 过滤，-i  不区分大小写，-v  排除指定字符串

帮助命令：
man ls或文件，不要是目录 
ls --help
help 命令    查看内置命令的帮助  
少量
whatis ls
apropos ls
info ls

date  输出时间或配置时间
df -h   查看分区的情况

压缩解压：
gzip 文件               压缩，文件.gz
gunzip 文件.gz      解压  
gzip 只能压缩文件，不保留源文件

tar -cvf  文件名.tar  要压缩的文件         -c打包，-v显示详细信息，-f文件名（必须）
tar -xvf  文件名.tar                                 解压
tar -zxvf   aa.tar.gz                                -x解包，-f指定解压文件，-z解压缩.tar.gz文件

zip -r  aa.zip   aa                                   -r压缩目录，保留源文件
unzip  aa.aip                                         解压

bzip2  -k 文件                                        -k保留源文件，.bz2
bunzip2  -k 文件.bz2                              -k保留源文件

网络命令：
write 用户名     给用户发信息，Ctrl+D保存结束，用户要登录才能
wall  hello        给所有用户发，广播
ping -c             -c指定发送次数
ifconfig            查看网卡信息，配置ip：  ifconfig eth0  192.168....
mail  用户名     发邮件，mail 查看邮件
last                   查看最后登录的用户信息
lastlog -u 500       查看特定用户上次登录时间，-u指定用户id500
traceroute             显示数据包到主机间的路径
tracepath              路径追踪
netstar -tlun          显示网络相关信息 -t tcp ，-u udp， -l 监听， -r 路由，-n显示IP地址和端口号
netstat -an             所有网络连接
netstat -rn             本机路由表
setup                     配置网络，ip，红帽专有
service network restart                                         重启网络
mount [-t 文件系统]  设备文件  挂载点文件夹         挂载
umount  设备文件                                                  卸载，要在挂载点外面    

关机重启：
shutdown [选项] 时间
-h 20:30   
-h now 马上关机                                          
-c 取消前一个关机命令
-h 关机
-r 重启
关机：halt，poweroff，init 0
重启reboot，init 6
系统运行级别1~6：init 0~6
logout ：退出登录

vi跟vim：
命令模式
    gg 回到第一行
    G 最后一行
    nG 到第n行
    dd删除光标所在行
    nx删除光标所处后n个字符
    dG删除光标到文件末尾内容
    D删除光标到行尾内容 
    yy，p复制粘贴
    dd，p剪切粘贴
    u取消上一步
    :%s/old/new/g   全文替换字符
    ZZ保存退出
    :wq！强制保存，root跟所有者能用
    :r !命令
    :set nu   显示行号
插入模式
编辑模式

软件包管理：
1、源码包：脚本安装包，可以看到源代码
2、二进制包（rpm包，系统默认包），已编译的，看不到源码，缺点是依赖多

模块依赖查询网站：www.rpmfind.net，.so结尾的到这个网站查依赖
rpm包依赖：树形依赖a-b-c，环形依赖a-b-c-a
安装
rpm -ivh 包全名             rpm安装，-i安装
rpm -Uvh  包全名          升级
rpm -e  包全名               卸载
rpm -q   包全名            查询，-qa查询全部，-qi查询软件信息，-qp查询未安装包信息，-l列表
rpm -qRp 包全名          查询未安装的包的依赖信息

yum在线管理包，自动安装依赖
yum源可以修改
list                        显示包列表
search  包名         搜索
-y insatll 包名       安装，-y全部yes
-y update 包名     升级
-y remove 包名    卸载，依赖包也会卸载，尽量不要卸载
grouplist              软件组列表
groupinstall 软件组名                 安装软件组
grounpremove  软件组名           卸载软件组

注释缩进比较严格

源码包安装一般放在/usr/local/下面
/etc/rc.d/init.d/xxx start     绝对路径开启服务，源码包安装方式
service xxx start                 开启服务，rpm包安装

make               编译
make insatll     编译安装
源码安装的只要直接删除目录就是卸载了

脚本安装包
./setup.sh

用户管理：
/etc/passwd        用户配置文件

root:x:0:0:root:/root:/bin/bash
用户名称  密码标识  UID(用户id)  组id  用户说明  家目录  登录之后的shell

UID：0超级用户，1-499系统用户，500-65535普通用户

影子文件：/etc/shadow
/etc/group     组信息文件
/etc/gshadow  组密码文件

需要root用户权限
useradd [选项] 用户    添加用户
passwd  用户    设置密码，root权限
passwd             修改自己的密码
passwd -l 用户      锁定用户
passwd -u 用户     解锁用户
chage                   修改用户密码状态
usermod
userdel -r 用户      删除用户，-r同时删除用户家目录
id 用户                   查看用户id
su - 用户                切换用户，"-"连同环境一同切换
su - 用户 -c "useradd user2"        借助root的权限执行命令
who           用户登录信息，tty本地终端登录，pts远程终端登录
w               用户登录详细信息
uptime       linux连续运行时间

groupadd 组                        添加组
groupmod [选项] 组名         修改用户组 
groupdel  组名                     删除，不允许有初始用户存在

whoami：我是谁

权限管理：

文件系统管理：
df -a               查看所有分区， -a
du  目录名      查看目录大小
fsck                文件系统修复命令，-a，-y
dumpe2fs      显示磁盘状态命令
mount [-l]       挂载命令
-------------------------------------------------------------------------
shell：
外层应用-->shell命令解释器-->内核-->硬件
解释执行的脚本语言，可以直接调用linux系统命令
echo -e  内容           输出，-e识别反斜杠

.sh文件第一行：#!/bin/Bash   标识下面写的是shell脚本
运行要赋予运行权限：绝对路径或相对路径
1、./hello.sh
2、bash hello.sh

yum install dos2unix
dos2unix  xxx.sh         将window的文件转为linux的，主要是一些换行符号不一样

history       显示历史记录，-c 清空历史，-w把缓存中的历史命令保存到文件
默认保存1000条历史
!n     重复执行第n条历史命令
!!      重复上一条
!字符串      执行以该字符串开头的命令     

alias a='vim'       给vim添加别名a

输入重定向：>覆盖,   >>追加，2> 、2>>错误输出重定向
ls > 文件

输出重定向<：wc [选项] [文件名]，Ctrl + d结束

多行命令执行顺序：分号;   &&逻辑与，||逻辑或
ls; cd aa;         都会执行，即使有报错
ls && ps         短路
ls ||  ps            短路
grep              过滤
more             显示一屏

通配符：正则
？          一个
*            0或多个
[abc]      任意一个
' '           单引号，原样输出
""           双引号输出有转义 
$name   变量
$(ls)        引用系统命令，反引号` ls`一样    

变量：
字母数字下划线，不能数字开头
a=2       等号两边不要空格 ，默认是字符类型
echo $a
name='张   三'
变量叠加：a=${name}222--->张   三222
set                    查看系统所有变量
unset name      删除

echo $PATH     环境变量

位置参数变量
$n      0-9  ,${10}，$0表示命令本身
$*       所有参数，一个整体
$@      所有参数，每个区分对待，可以for i in "$*"遍历
$#       参数个数
$?       判断上条语句是否正确执行，0为正确
$$      当前进程进程号
$!       后台运行最后一个进程号

read [选项] [变量名]
read -t 30 -p "xxxxxxxx" name       等待三十秒，输入xxxx，赋值给变量name

运算
declare声明变量类型
a=1
b=2
c=$(($a+$b))     双小括号运算

环境变量：
source 配置文件        使生效，或 .配置文件

支持正则的命令：
grep
awk      列字符截取
sed [选项] '[动作]' 文件名        字符截取
\{n\}      匹配前一个字符n次

cut [选项] 文件名     字段提取，-f列号，-d分割符
cut -d “;” -f  3      分号分隔，第三列

printf '%s %s\n' 1 2      格式化输出,\n换行
print                              末尾有换行
%s                                  字符串
%i                                    整数
%8.2f                              浮点型，共8位，2位小数

sed -n '2p' aa.txt            输出文件第二行
sed '2c xxx' aa.txt           第二行替换为xxx，c替换  

sort [选项] 文件名           排序
wc                                  统计

test -e /root/aa.txt                  判断文件是否存在，或[ -e /root/aa.txt]                       
[ 1 -eq 2 ] && echo yes || echo no       判断1==2，真返回yes，否则no
1==2 && echo yes || echo no       判断1==2，真返回yes，否则no
-lt，-gt，-ne
---------------------------------------------------------------------
条件判断：
if [ 条件表达式 ]；then         表达式两边必须要空格, [ -z "$y" ] 判空
    程序
elif
    程序
fi
或
if [ 条件表达式 ]；    
    then 
        程序
else
    程序
fi
---------------------------
case $a in        开头
    "yes")
              echo "y"
              ;;
     "no")
             ........
             ;;
       *)           其它
esac                结尾
--------------------------------
for i in （ls /）  或  值1 值2
      do
             echo $i
      done

s=0
for (( i=1;i<=100;i=i+1 ))
   do
     s=$(( $s+$i ))
   done
    ceho $s

----------------------------------
while和until循环       
while [ 条件表达式 ]        条件成立循环
     do
      
     done

until [ 条件表达式 ]         条件不成立循环












































